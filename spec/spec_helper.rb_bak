require 'serverspec'
require 'pathname'
require 'net/ssh'
require 'highline/import'
require 'pry'


set :backend, :ssh

# user = ask("User:") { |q| q.echo = true }
#
# if ENV['ASK_LOGIN_PASSWORD']
#   options[:password] = ask("\nEnter login password: ") { |q| q.echo = false }
# else
# options[:password] = ENV['LOGIN_PASSWORD']
# end
#
# c.ssh = Net::SSH.start(c.host, user, options)
# end
# end
# end

# begin
#
#   require 'highline/import'
# rescue
#   fail "highline is not available. Try installing it."
#
# end


host               = ENV['TARGET_HOST']
options            = Net::SSH::Config.for(host)

# p host
# p options
ENV['EXEC_TIME']   = Time.now.strftime("%Y%m%d_%H%M%S").to_s


# if ENV['ASK_SUDO_PASSWORD']
#   begin
#     set :sudo_password, ask("Enter sudo password: ") { |q| q.echo = false }
#   rescue LoadError
#     fail "highline is not available. Try installing it."
#   end
# else
#   set :sudo_password, ENV['SUDO_PASSWORD']
# end

# options[:user]     = ask("\nEnter login user: ") { |q| q.echo = false }
# options[:user]     = ask("\nEnter login user: ") { |q| q.echo = true }
options[:user]     = ask("\nEnter login user: ")
# if ENV['ASK_LOGIN_USER']
#   options[:user] = ask("\nEnter login user: ") { |q| q.echo = false }
# else
#   options[:user] = ENV['LOGIN_USER']
# end

# options[:password] = ask("\nEnter login password: ") { |q| q.echo = false }
options[:password] = ask("\nEnter login password: ")
 # if ENV['ASK_LOGIN_PASSWORD']
#   options[:password] = ask("\nEnter login password: ") { |q| q.echo = false }
# else
#   options[:password] = ENV['LOGIN_PASSWORD']
# end


if options[:password].empty? || options[:user].empty?
  # raise "Plase confirm the login user/password"
  p "Plase confirm the login user/password"
  exit();
else
  # set :sudo_password, ask("Enter sudo password: ") { |q| q.echo = false }
   set :sudo_password, ask("Enter sudo password: ")
#  password_temp = ask("Enter sudo password: ")
#	set :sudo_password, password_temp.chomp

ENV['SUDO_PASSWORD'] = "Password"
#ENV['ASK_SUDO_PASSWORD'] = Password

#  binding.pry


  set :host, host
  set :ssh_options, options


end


# if options[:password].present? || options[:user].present?
#   set :sudo_password, ask("Enter sudo password: ") { |q| q.echo = false }
# else
#   raise "Plase confirm the login user/password"
# end


# p options
# options[:user] ||= Etc.getlogin
# set :host, 'vagrant-centos65.vagrantup.com'
# set :host, host
# set :ssh_options, options

# Disable sudo
# set :disable_sudo, true


# Set environment variables
# set :env, :LANG => 'C', :LC_MESSAGES => 'C'

# Set PATH
# set :path, '/sbin:/usr/local/sbin:$PATH'
